{
  "name": "devicescript",
  "displayName": "Microsoft DeviceScript",
  "version": "0.0.0",
  "publisher": "Microsoft Research",
  "description": "A TypeScript-like language and runtime for small embedded devices.",
  "author": {
    "name": "Microsoft Corporation"
  },
  "homepage": "https://microsoft.github.io/devicescript/",
  "license": "MIT",
  "preview": true,
  "extensionKind": [
    "ui"
  ],
  "keywords": [
    "DeviceScript",
    "IoT"
  ],
  "engines": {
    "vscode": "^1.74.0"
  },
  "icon": "images/ds-logo-color.png",
  "categories": [
    "Debuggers"
  ],
  "private": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/microsoft/devicescript.git"
  },
  "bugs": {
    "url": "https://github.com/microsoft/devicescript/issues"
  },
  "scripts": {
    "buildicons": "node ./scripts/updateFonts.js",
    "buildts": "node ../build.js --fast",
    "package": "vsce package",
    "publish": "vsce publish",
    "publish-pre-release": "vsce publish --pre-release",
    "build": "yarn buildicons && yarn buildts",
    "vscode:prepublish": "yarn build"
  },
  "devDependencies": {
    "@types/isomorphic-fetch": "^0.0.36",
    "@types/vscode": "^1.74.0",
    "@vscode/debugadapter": "^1.58.0",
    "@vscode/debugadapter-testsupport": "^1.58.0",
    "@vscode/vsce": "^2.16.0",
    "isomorphic-fetch": "^3.0.0",
    "typescript": "^4.9.4",
    "webfont": "^11.2.26"
  },
  "dependencies": {
    "jacdac-ts": "*",
    "websocket-polyfill": "^0.0.3"
  },
  "main": "./built/devicescript-vscode.js",
  "browser": "./built/devicescript-vscode-web.js",
  "activationEvents": [
    "workspaceContains:**/devsconfig.json",
    "onDebugResolve:devicescript",
    "onDebugDynamicConfigurations:devicescript",
    "onWebviewPanel:extension.devicescript.simulators"
  ],
  "workspaceTrust": {
    "request": "never"
  },
  "contributes": {
    "configuration": {
      "title": "DeviceScript",
      "properties": {
        "devicescript.devtools.autoStart": {
          "type": "boolean",
          "default": true,
          "description": "Automatically start DeviceScript Server (requires reload)."
        },
        "devicescript.devtools.showOnStart": {
          "type": "boolean",
          "default": false,
          "description": "Show DeviceScript Server terminal when starting."
        },
        "devicescript.devtools.shell": {
          "type": "boolean",
          "default": false,
          "description": "Start DeviceScript Server in a shell rather than as a direct process."
        },
        "devicescript.devtools.transports.serial": {
          "type": "boolean",
          "default": true,
          "description": "Connect to hardware devices using serial."
        },
        "devicescript.devtools.transports.usb": {
          "type": "boolean",
          "default": false,
          "description": "Connect to hardware devices using USB."
        },
        "devicescript.jacdac.diagnostics": {
          "type": "boolean",
          "default": false,
          "description": "Enables additional debugging output from the Jacdac tooling."
        },
        "devicescript.jacdac.tracePackets": {
          "type": "boolean",
          "default": false,
          "description": "Trace Jacdac packets to 'Jacdac Packets' Output pane."
        },
        "devicescript.jacdac.showInfrastructure": {
          "type": "boolean",
          "default": false,
          "description": "Show infrastructure services in views."
        },
        "devicescript.output.redirectConsole": {
          "type": "boolean",
          "default": false,
          "description": "Always redirect console output to output pane (requires reload)."
        },
        "devicescript.debugger.showTerminalOnStart": {
          "type": "boolean",
          "default": true,
          "description": "Show DeviceScript terminal when starting debug session."
        },
        "devicescript.simulator.runNative": {
          "type": "boolean",
          "default": false,
          "description": "Run a jdcli executable as the VM instead of bundled WASM binary."
        },
        "devicescript.simulator.nativePath": {
          "type": "string",
          "default": "",
          "description": "Path to jdcli."
        },
        "devicescript.deploy.ignoreRuntimeVersion": {
          "type": "boolean",
          "default": false,
          "description": "Ignore incompatible runtime versions when deploying."
        },
        "devicescript.cloud.apiRoot": {
          "type": "string",
          "default": "",
          "description": "Web API root url for device management"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "devicescript",
          "title": "DeviceScript",
          "icon": "./images/jacdac.dark.svg"
        }
      ]
    },
    "views": {
      "devicescript": [
        {
          "id": "extension.devicescript.jdom-explorer",
          "name": "Devices"
        },
        {
          "id": "extension.devicescript.watch",
          "name": "Watch"
        },
        {
          "id": "extension.devicescript.cloud-explorer",
          "name": "Cloud"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "extension.devicescript.jdom-explorer",
        "contents": "Connect a DeviceScript device or start a Simulator.\n[Start Simulator](command:extension.devicescript.startSimulator)\n\nTo learn more about DeviceScript, [read our docs](https://aka.ms/devicescript)."
      },
      {
        "view": "extension.devicescript.watch",
        "contents": "Select Registers or Events to watch."
      }
    ],
    "walkthroughs": [
      {
        "id": "devicescript.gettingstarted",
        "title": "Get Started with DeviceScript",
        "description": "Get your first DeviceScript program running",
        "steps": [
          {
            "id": "installnode.js",
            "title": "Install Node.js",
            "description": "Node.js is an easy way to run JavaScript code. It comes with a package manager, yarn, that you will use to install the DeviceScript command line.\n[Install Node.js](https://nodejs.org/en/download/)",
            "media": {
              "image": "media/image.png",
              "altText": "Empty image"
            },
            "completionEvents": []
          },
          {
            "id": "devicescript.initproject",
            "title": "Create New DeviceScript Project",
            "description": "Use the command line to create a new DeviceScript project in a new folder.\n    ``npx @devicescript/cli init``",
            "media": {
              "image": "media/image.png",
              "altText": "Empty image"
            },
            "completionEvents": []
          },
          {
            "id": "devicescript.deployanddebug",
            "title": "Deploy and Debug your DeviceScript",
            "description": "Once you've installed the command line, you can build and deploy DeviceScript programs at a terminal by entering ``devicescript your-file-name.ts``.\nAnother easy way to run DeviceScript programs is by using VS Code's debugger which lets you run the code, pause at different points, and help you what's going on step-by-step.\n[Start Debugging](command:workbench.action.debug.start)",
            "media": {
              "image": "media/image.png",
              "altText": "Empty image"
            },
            "completionEvents": []
          }
        ]
      }
    ],
    "icons": {
      "devicescript-logo": {
        "description": "Devicescript logo",
        "default": {
          "fontPath": "./built/devicescript.woff",
          "fontCharacter": "\\E000"
        }
      }
    },
    "menus": {
      "view/title": [
        {
          "command": "extension.devicescript.connect",
          "when": "view == extension.devicescript.jdom-explorer",
          "group": "navigation"
        },
        {
          "command": "extension.devicescript.openSimulators",
          "when": "view == extension.devicescript.jdom-explorer",
          "group": "navigation"
        },
        {
          "command": "extension.devicescript.showServerTerminal",
          "when": "view == extension.devicescript.jdom-explorer",
          "group": "navigation"
        },
        {
          "command": "extension.devicescript.watch.clear",
          "when": "view == extension.devicescript.watch",
          "group": "navigation"
        },
        {
          "command": "extension.devicescript.cloud.refresh",
          "when": "view == extension.devicescript.cloud-explorer",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "extension.devicescript.stopSimulator",
          "when": "view == extension.devicescript.jdom-explorer && viewItem == simulator",
          "group": "inline"
        },
        {
          "command": "extension.devicescript.resetDevice",
          "when": "view == extension.devicescript.jdom-explorer && viewItem == simulator",
          "group": "inline"
        },
        {
          "command": "extension.devicescript.resetDevice",
          "when": "view == extension.devicescript.jdom-explorer && viewItem == device",
          "group": "inline"
        },
        {
          "command": "extension.devicescript.identifyDevice",
          "when": "view == extension.devicescript.jdom-explorer && viewItem == device",
          "group": "inline"
        },
        {
          "command": "extension.devicescript.watch.add",
          "when": "view == extension.devicescript.jdom-explorer && viewItem == register",
          "group": "inline"
        },
        {
          "command": "extension.devicescript.watch.remove",
          "when": "view == extension.devicescript.watch && viewItem == register",
          "group": "inline"
        },
        {
          "command": "extension.devicescript.watch.add",
          "when": "view == extension.devicescript.jdom-explorer && viewItem == event",
          "group": "inline"
        },
        {
          "command": "extension.devicescript.watch.remove",
          "when": "view == extension.devicescript.watch && viewItem == event",
          "group": "inline"
        },
        {
          "command": "extension.devicescript.watch.remove",
          "when": "view == extension.devicescript.watch && viewItem == missing",
          "group": "inline"
        }
      ],
      "commandPalette": [
        {
          "command": "extension.devicescript.openSimulators"
        },
        {
          "command": "extension.devicescript.pickDeviceScriptManager"
        },
        {
          "command": "extension.devicescript.connect"
        },
        {
          "command": "extension.devicescript.startSimulator"
        },
        {
          "command": "extension.devicescript.stopSimulator"
        },
        {
          "command": "extension.devicescript.showOutput"
        },
        {
          "command": "extension.devicescript.showServerTerminal"
        },
        {
          "command": "extension.devicescript.cloud.configure"
        },
        {
          "command": "extension.devicescript.cloud.refresh"
        }
      ],
      "debug/variables/context": [
        {
          "command": "extension.devicescript.toggleFormatting",
          "when": "debugType == 'devicescript' && debugProtocolVariableMenuContext == 'simple'"
        }
      ]
    },
    "commands": [
      {
        "command": "extension.devicescript.showServerTerminal",
        "title": "Show Development Server Terminal",
        "category": "DeviceScript",
        "icon": "$(output)"
      },
      {
        "command": "extension.devicescript.showOutput",
        "title": "Show DeviceScript Output",
        "category": "DeviceScript"
      },
      {
        "command": "extension.devicescript.openSimulators",
        "title": "Open Simulators",
        "category": "DeviceScript",
        "icon": "$(dashboard)"
      },
      {
        "command": "extension.devicescript.identifyDevice",
        "title": "Identify device",
        "category": "DeviceScript",
        "icon": "$(bell)"
      },
      {
        "command": "extension.devicescript.connect",
        "title": "Connect device",
        "category": "DeviceScript",
        "icon": "$(plug)"
      },
      {
        "command": "extension.devicescript.pickDeviceScriptManager",
        "title": "Pick DeviceScript device",
        "category": "DeviceScript",
        "icon": "$(circuit-board)"
      },
      {
        "command": "extension.devicescript.selectNode",
        "title": "Watch",
        "category": "DeviceScript"
      },
      {
        "command": "extension.devicescript.watch.clear",
        "title": "Watch",
        "category": "DeviceScript",
        "icon": "$(close-all)"
      },
      {
        "command": "extension.devicescript.watch.add",
        "title": "Watch",
        "category": "DeviceScript",
        "icon": "$(pin)"
      },
      {
        "command": "extension.devicescript.watch.remove",
        "title": "Unwatch",
        "category": "DeviceScript",
        "icon": "$(close)"
      },
      {
        "command": "extension.devicescript.resetDevice",
        "title": "Reset device",
        "category": "DeviceScript",
        "icon": "$(debug-restart)"
      },
      {
        "command": "extension.devicescript.toggleFormatting",
        "title": "Toggle between decimal and hex formatting"
      },
      {
        "command": "extension.devicescript.startSimulator",
        "title": "Start Simulator",
        "category": "DeviceScript"
      },
      {
        "command": "extension.devicescript.stopSimulator",
        "title": "Stop Simulator",
        "category": "DeviceScript",
        "icon": "$(close)"
      },
      {
        "command": "extension.devicescript.showFirmwareInformation",
        "title": "Update Firmware",
        "category": "DeviceScript"
      },
      {
        "command": "extension.devicescript.cloud.configure",
        "title": "Configure",
        "category": "DeviceScript Cloud",
        "icon": "$(plug)"
      },
      {
        "command": "extension.devicescript.cloud.refresh",
        "title": "Refresh",
        "category": "DeviceScript Cloud",
        "icon": "$(refresh)"
      }
    ],
    "breakpoints": [
      {
        "language": "typescript"
      }
    ],
    "debuggers": [
      {
        "type": "devicescript",
        "languages": [
          "typescript"
        ],
        "label": "DeviceScript",
        "program": "./out/debugAdapter.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [
              "program",
              "deviceId"
            ],
            "properties": {
              "program": {
                "type": "string",
                "description": "Absolute path to a text file.",
                "default": "${workspaceFolder}/main.ts"
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after launch.",
                "default": true
              },
              "deviceId": {
                "type": "string",
                "description": "Device identifier of the device (long or short). Use ${command:simulator} for the Simulator."
              },
              "serviceInstance": {
                "type": "number",
                "description": "Instance index of the device manger service. Default is 0."
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "devicescript",
            "request": "launch",
            "name": "DeviceScript: Launch",
            "program": "${workspaceFolder}/main.ts",
            "stopOnEntry": true
          }
        ],
        "configurationSnippets": [
          {
            "label": "DeviceScript: Launch",
            "description": "A new configuration for 'debugging' a user selected typescript file.",
            "body": {
              "type": "devicescript",
              "request": "launch",
              "name": "DeviceScript: Launch",
              "program": "^\"\\${workspaceFolder}/main.ts",
              "stopOnEntry": true
            }
          }
        ],
        "variables": {
          "askForProgramName": "extension.devicescript.variables.askForProgramName",
          "simulator": "extension.devicescript.variables.simulator"
        }
      }
    ]
  }
}