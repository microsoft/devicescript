{
  "name": "devicescript",
  "displayName": "DeviceScript",
  "version": "0.0.0",
  "publisher": "Microsoft Research",
  "description": "Language support for DeviceScript.",
  "author": {
    "name": "Microsoft Corporation"
  },
  "license": "MIT",
  "keywords": [
    "DeviceScript",
    "IoT"
  ],
  "engines": {
    "vscode": "^1.74.0"
  },
  "icon": "images/ds-logo-color.png",
  "categories": [
    "Debuggers"
  ],
  "private": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/microsoft/devicescript.git"
  },
  "bugs": {
    "url": "https://github.com/microsoft/devicescript/issues"
  },
  "scripts": {
    "package": "vsce package",
    "publish": "vsce publish",
    "publish-pre-release": "vsce publish --pre-release",
    "build": "node ../build.js --fast",
    "vscode:prepublish": "yarn build"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@vscode/debugadapter": "^1.58.0",
    "@vscode/debugadapter-testsupport": "^1.58.0",
    "@vscode/vsce": "^2.16.0",
    "typescript": "^4.9.4"
  },
  "dependencies": {
    "websocket-polyfill": "^0.0.3",
    "jacdac-ts": "*"
  },
  "main": "./built/devicescript-vscode.js",
  "browser": "./built/devicescript-vscode-web.js",
  "activationEvents": [
    "workspaceContains:**/devsconfig.json",
    "onDebugResolve:devicescript",
    "onDebugDynamicConfigurations:devicescript",
    "onCommand:extension.devicescript.start",
    "onCommand:extension.devicescript.openDevTools",
    "onCommand:extension.devicescript.getProgramName",
    "onCommand:extension.devicescript.runEditorContents",
    "onCommand:extension.devicescript.debugEditorContents",
    "onView:extension.devicescript.jacdac-jdom-explorer",
    "onView:extension.devicescript.jacdac-jdom-watch"
  ],
  "workspaceTrust": {
    "request": "never"
  },
  "contributes": {
    "configuration": {
      "title": "DeviceScript",
      "properties": {
        "devicescript.devtools.autoStart": {
          "type": "boolean",
          "default": true,
          "description": "Automatically start DeviceScript Server (requires reload)."
        },
        "devicescript.devtools.showOnStart": {
          "type": "boolean",
          "default": false,
          "description": "Show DeviceScript Server terminal when starting."
        },
        "devicescript.devtools.useShell": {
          "type": "boolean",
          "default": false,
          "description": "Start DeviceScript Server in a shell rather than as a direct process."
        },
        "devicescript.devtools.transports.serial": {
          "type": "boolean",
          "default": true,
          "description": "Connect to hardware devices using serial."
        },
        "devicescript.devtools.transports.usb": {
          "type": "boolean",
          "default": false,
          "description": "Connect to hardware devices using USB."
        },
        "devicescript.jacdac.diagnostics": {
          "type": "boolean",
          "default": false,
          "description": "Enables additional debugging output from the Jacdac tooling."
        },
        "devicescript.jacdac.tracePackets": {
          "type": "boolean",
          "default": false,
          "description": "Trace Jacdac packets to 'Jacdac Packets' Output pane."
        },
        "devicescript.jacdac.showInfrastructure": {
          "type": "boolean",
          "default": false,
          "description": "Show infrastructure services in views."
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "deviceScriptViewContainer",
          "title": "DeviceScript",
          "icon": "./images/jacdac.svg"
        }
      ]
    },
    "views": {
      "deviceScriptViewContainer": [
        {
          "id": "extension.devicescript.jacdac-jdom-explorer",
          "name": "Devices"
        },
        {
          "id": "extension.devicescript.jacdac-jdom-watch",
          "name": "Watch"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "extension.devicescript.jacdac-jdom-explorer",
        "contents": "Connect a Jacdac device."
      },
      {
        "view": "extension.devicescript.jacdac-jdom-watch",
        "contents": "Select Registers or Events to watch."
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "extension.devicescript.openDevTools",
          "when": "view == extension.devicescript.jacdac-jdom-explorer",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "extension.devicescript.resetDevice",
          "when": "view == extension.devicescript.jacdac-jdom-explorer && viewItem == device",
          "group": "inline"
        },
        {
          "command": "extension.devicescript.identifyDevice",
          "when": "view == extension.devicescript.jacdac-jdom-explorer && viewItem == device",
          "group": "inline"
        },
        {
          "command": "extension.devicescript.watchNode",
          "when": "view == extension.devicescript.jacdac-jdom-explorer && viewItem == register",
          "group": "inline"
        },
        {
          "command": "extension.devicescript.unwatchNode",
          "when": "view == extension.devicescript.jacdac-jdom-watch && viewItem == register",
          "group": "inline"
        },
        {
          "command": "extension.devicescript.watchNode",
          "when": "view == extension.devicescript.jacdac-jdom-explorer && viewItem == event",
          "group": "inline"
        },
        {
          "command": "extension.devicescript.unwatchNode",
          "when": "view == extension.devicescript.jacdac-jdom-watch && viewItem == event",
          "group": "inline"
        }
      ],
      "editor/title/run": [
        {
          "command": "extension.devicescript.runEditorContents",
          "when": "resourceLangId == typescript",
          "group": "navigation@1"
        },
        {
          "command": "extension.devicescript.debugEditorContents",
          "when": "resourceLangId == typescript",
          "group": "navigation@2"
        }
      ],
      "commandPalette": [
        {
          "command": "extension.devicescript.debugEditorContents",
          "when": "resourceLangId == typescript"
        },
        {
          "command": "extension.devicescript.runEditorContents",
          "when": "resourceLangId == typescript"
        },
        {
          "command": "extension.devicescript.start"
        },
        {
          "command": "extension.devicescript.openDevTools"
        }
      ],
      "debug/variables/context": [
        {
          "command": "extension.devicescript.toggleFormatting",
          "when": "debugType == 'devicescript' && debugProtocolVariableMenuContext == 'simple'"
        }
      ]
    },
    "commands": [
      {
        "command": "extension.devicescript.debugEditorContents",
        "title": "Deploy and Debug with DeviceScript",
        "category": "DeviceScript",
        "enablement": "!inDebugMode",
        "icon": "$(debug-alt)"
      },
      {
        "command": "extension.devicescript.runEditorContents",
        "title": "Deploy and Run with DeviceScript",
        "category": "DeviceScript",
        "enablement": "!inDebugMode",
        "icon": "$(play)"
      },
      {
        "command": "extension.devicescript.start",
        "title": "Start things",
        "category": "DeviceScript"
      },
      {
        "command": "extension.devicescript.showServerTerminal",
        "title": "Show development server terminal",
        "category": "DeviceScript"
      },
      {
        "command": "extension.devicescript.openDevTools",
        "title": "Open Developer Tools",
        "category": "DeviceScript",
        "icon": "$(dashboard)"
      },
      {
        "command": "extension.devicescript.identifyDevice",
        "title": "Identify device",
        "category": "DeviceScript",
        "icon": "$(bell)"
      },
      {
        "command": "extension.devicescript.selectNode",
        "title": "Watch",
        "category": "DeviceScript"
      },
      {
        "command": "extension.devicescript.watchNode",
        "title": "Watch",
        "category": "DeviceScript",
        "icon": "$(star-empty)"
      },
      {
        "command": "extension.devicescript.unwatchNode",
        "title": "Unwatch",
        "category": "DeviceScript",
        "icon": "$(star-full)"
      },
      {
        "command": "extension.devicescript.resetDevice",
        "title": "Identify device",
        "category": "DeviceScript",
        "icon": "$(debug-restart)"
      },
      {
        "command": "extension.devicescript.toggleFormatting",
        "title": "Toggle between decimal and hex formatting"
      }
    ],
    "breakpoints": [
      {
        "language": "typescript"
      }
    ],
    "debuggers": [
      {
        "type": "devicescript",
        "languages": [
          "typescript"
        ],
        "label": "DeviceScript",
        "program": "./out/debugAdapter.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [
              "program"
            ],
            "properties": {
              "program": {
                "type": "string",
                "description": "Absolute path to a text file.",
                "default": "${workspaceFolder}/${command:AskForProgramName}"
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after launch.",
                "default": true
              },
              "trace": {
                "type": "boolean",
                "description": "Enable logging of the Debug Adapter Protocol.",
                "default": true
              },
              "compileError": {
                "type": "string",
                "description": "Simulates a compile error in 'launch' request.",
                "enum": [
                  "default",
                  "show",
                  "hide"
                ],
                "enumDescriptions": [
                  "default: show fake compile error to user",
                  "show fake compile error to user",
                  "do not show fake compile error to user"
                ]
              }
            }
          },
          "attach": {
            "required": [
              "program"
            ],
            "properties": {
              "program": {
                "type": "string",
                "description": "Absolute path to a text file.",
                "default": "${workspaceFolder}/${command:AskForProgramName}"
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after attach.",
                "default": true
              },
              "trace": {
                "type": "boolean",
                "description": "Enable logging of the Debug Adapter Protocol.",
                "default": true
              },
              "compileError": {
                "type": "string",
                "description": "Simulates a compile error in 'attach' request.",
                "enum": [
                  "default",
                  "show",
                  "hide"
                ],
                "enumDescriptions": [
                  "default: show fake compile error to user",
                  "show fake compile error to user",
                  "do not show fake compile error to user"
                ]
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "devicescript",
            "request": "launch",
            "name": "Ask for file name",
            "program": "${workspaceFolder}/${command:AskForProgramName}",
            "stopOnEntry": true
          }
        ],
        "configurationSnippets": [
          {
            "label": "DeviceScript: Launch",
            "description": "A new configuration for 'debugging' a user selected typescript file.",
            "body": {
              "type": "devicescript",
              "request": "launch",
              "name": "Ask for file name",
              "program": "^\"\\${workspaceFolder}/\\${command:AskForProgramName}\"",
              "stopOnEntry": true
            }
          }
        ],
        "variables": {
          "AskForProgramName": "extension.devicescript.getProgramName"
        }
      }
    ]
  }
}