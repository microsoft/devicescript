{
    "name": "devicescript-vscode",
    "displayName": "DeviceScript",
    "version": "2.0.4",
    "publisher": "Microsoft",
    "description": "DeviceScript extension for Visual Studio Code.",
    "author": {
        "name": "Microsoft Corporation"
    },
    "homepage": "https://microsoft.github.io/devicescript/",
    "license": "MIT",
    "preview": true,
    "extensionKind": [
        "workspace"
    ],
    "keywords": [
        "DeviceScript",
        "IoT",
        "TypeScript",
        "Embdded"
    ],
    "engines": {
        "vscode": "^1.76.0"
    },
    "icon": "images/jacdac-logo.png",
    "galleryBanner": {
        "color": "#C80000",
        "theme": "dark"
    },
    "categories": [
        "Debuggers"
    ],
    "private": true,
    "repository": {
        "type": "git",
        "url": "https://github.com/microsoft/devicescript.git",
        "directory": "vscode"
    },
    "bugs": {
        "url": "https://github.com/microsoft/devicescript/issues"
    },
    "scripts": {
        "buildicons": "node ./scripts/updateFonts.js",
        "buildts": "node ../build.js --fast",
        "package": "vsce package --out devicescript.vsix --yarn",
        "publish": "vsce publish",
        "publish-pre-release": "vsce publish --pre-release",
        "build": "yarn buildicons && yarn buildts",
        "vscode:prepublish": "yarn build"
    },
    "devDependencies": {
        "@types/isomorphic-fetch": "^0.0.36",
        "@types/vscode": "^1.76.0",
        "@vscode/debugadapter": "^1.59.0",
        "@vscode/debugadapter-testsupport": "^1.59.0",
        "@vscode/vsce": "^2.18.0",
        "isomorphic-fetch": "^3.0.0",
        "typescript": "^4.9.5",
        "vscode-uri": "^3.0.7",
        "webfont": "^11.2.26",
        "@devicescript/interop": "*"
    },
    "dependencies": {
        "@vscode/extension-telemetry": "^0.7.7",
        "jacdac-ts": "*",
        "@devicescript/plugin": "*",
        "websocket-polyfill": "^0.0.3"
    },
    "main": "./built/devicescript-vscode.js",
    "browser": "./built/devicescript-vscode-web.js",
    "activationEvents": [
        "workspaceContains:**/devsconfig.json",
        "onDebugResolve:devicescript",
        "onDebugDynamicConfigurations:devicescript",
        "onWebviewPanel:extension.devicescript.simulators"
    ],
    "workspaceTrust": {
        "request": "never"
    },
    "contributes": {
        "configuration": {
            "title": "DeviceScript",
            "properties": {
                "devicescript.devtools.autoStart": {
                    "type": "boolean",
                    "default": true,
                    "description": "Automatically start DeviceScript Server (requires reload)."
                },
                "devicescript.devtools.node": {
                    "type": "string",
                    "default": "",
                    "description": "Path to the Node.JS executable. If not specified, defaults to `node`.",
                    "scope": "machine-overridable"
                },
                "devicescript.devtools.shell": {
                    "type": "boolean",
                    "default": false,
                    "description": "Start DeviceScript Server in the default shell rather than as a direct process.",
                    "scope": "machine-overridable"
                },
                "devicescript.jacdac.diagnostics": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enables additional debugging output from the Jacdac tooling."
                },
                "devicescript.jacdac.tracePackets": {
                    "type": "boolean",
                    "default": false,
                    "description": "Trace Jacdac packets to 'DeviceScript - Packets' Output pane."
                },
                "devicescript.debugger.showTerminalOnStart": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show DeviceScript terminal when starting debug session."
                },
                "devicescript.debugger.showSimulatorsOnStart": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show DeviceScript simulators when starting debug session."
                },
                "devicescript.simulator.runNative": {
                    "type": "boolean",
                    "default": false,
                    "description": "Run a jdcli executable as the VM instead of bundled WASM binary."
                },
                "devicescript.simulator.nativePath": {
                    "type": "string",
                    "default": "",
                    "description": "Path to jdcli."
                },
                "devicescript.deploy.ignoreRuntimeVersion": {
                    "type": "boolean",
                    "default": false,
                    "description": "Ignore incompatible runtime versions when deploying."
                },
                "devicescript.gateway.apiRoot": {
                    "type": "string",
                    "default": "",
                    "description": "Web API root url for device management"
                }
            }
        },
        "typescriptServerPlugins": [
            {
                "name": "@devicescript/plugin"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "devicescript",
                    "title": "DeviceScript",
                    "icon": "./images/jacdac.dark.svg"
                }
            ]
        },
        "views": {
            "devicescript": [
                {
                    "id": "extension.devicescript.jdom",
                    "name": "Devices"
                },
                {
                    "id": "extension.devicescript.watch",
                    "name": "Watch"
                },
                {
                    "id": "extension.devicescript.gateway",
                    "name": "Development Gateway"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "extension.devicescript.jdom",
                "contents": "Start a simulator or connect to a device.\n[Start Simulator](command:extension.devicescript.simulator.start)\n[Connect Device](command:extension.devicescript.connect)\n\nTo learn more about DeviceScript, [read the docs](https://microsoft.github.io/devicescript/intro) or browse the list of [devices](https://microsoft.github.io/devicescript/devices/)."
            },
            {
                "view": "extension.devicescript.watch",
                "contents": "Select Registers or Events to watch."
            },
            {
                "view": "extension.devicescript.gateway",
                "contents": "Deploy scripts remotely, track telemetry.\n[Configure...](command:extension.devicescript.gateway.configure)\n[Create Gateway](https://microsoft.github.io/devicescript/developer/cloud/gateway)\n\nTo learn more about DeviceScript Gateway, [read the docs](https://microsoft.github.io/devicescript/developer/cloud/gateway)."
            }
        ],
        "walkthroughs": [
            {
                "id": "devicescript.gettingstarted",
                "title": "Get Started with DeviceScript",
                "description": "Get your first DeviceScript program running",
                "steps": [
                    {
                        "id": "installnode.js",
                        "title": "Install Node.js",
                        "description": "Node.js is an easy way to run JavaScript code. It comes with a package manager that you will use to install the DeviceScript command line.\n[Install Node.js](https://nodejs.org/en/download/)",
                        "media": {
                            "image": "media/installnodejs.png",
                            "altText": "Screenshot of the node.js download page"
                        },
                        "completionEvents": []
                    },
                    {
                        "id": "devicescript.initproject",
                        "title": "Create New DeviceScript Project",
                        "description": "Use the command line to create a new DeviceScript project in a new folder.\n    ``npx --yes @devicescript/cli@latest init``",
                        "media": {
                            "image": "media/newproject.png",
                            "altText": "Project structure after the init command."
                        },
                        "completionEvents": []
                    },
                    {
                        "id": "devicescript.deployanddebug",
                        "title": "Deploy and Debug your DeviceScript",
                        "description": "Once you've installed the command line, you can build and deploy DeviceScript programs at a terminal by entering ``devicescript your-file-name.ts``.\nAnother easy way to run DeviceScript programs is by using VS Code's debugger which lets you run the code, pause at different points, and help you what's going on step-by-step.\n[Start Debugging](command:workbench.action.debug.start)",
                        "media": {
                            "image": "media/debugger.png",
                            "altText": "Program paused on the debugger with simulators"
                        },
                        "completionEvents": []
                    }
                ]
            }
        ],
        "icons": {
            "devicescript-logo": {
                "description": "Devicescript logo",
                "default": {
                    "fontPath": "./built/devicescript.woff",
                    "fontCharacter": "\\E000"
                }
            }
        },
        "menus": {
            "editor/title": [
                {
                    "command": "extension.devicescript.editor.build",
                    "when": "!inDebugMode && resourceLangId == typescript && resourceDirname =~ //src$/ && resourceFilename =~ /main*.\\.ts/",
                    "group": "navigation"
                }
            ],
            "editor/title/run": [
                {
                    "command": "extension.devicescript.editor.debug",
                    "when": "!inDebugMode && resourceLangId == typescript && resourceDirname =~ //src$/ && resourceFilename =~ /main*.\\.ts/",
                    "group": "navigation"
                },
                {
                    "command": "extension.devicescript.editor.run",
                    "when": "!inDebugMode && resourceLangId == typescript && resourceDirname =~ //src$/ && resourceFilename =~ /main*.\\.ts/",
                    "group": "navigation"
                }
            ],
            "view/title": [
                {
                    "command": "extension.devicescript.connect",
                    "when": "view == extension.devicescript.jdom",
                    "group": "navigation"
                },
                {
                    "command": "extension.devicescript.openSimulators",
                    "when": "view == extension.devicescript.jdom",
                    "group": "navigation"
                },
                {
                    "command": "extension.devicescript.terminal.show",
                    "when": "view == extension.devicescript.jdom",
                    "group": "navigation"
                },
                {
                    "command": "extension.devicescript.watch.clear",
                    "when": "view == extension.devicescript.watch",
                    "group": "navigation"
                },
                {
                    "command": "extension.devicescript.gateway.configure",
                    "when": "view == extension.devicescript.gateway",
                    "group": "navigation"
                },
                {
                    "command": "extension.devicescript.gateway.refresh",
                    "when": "view == extension.devicescript.gateway",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "extension.devicescript.simulator.stop",
                    "when": "view == extension.devicescript.jdom && viewItem == simulator",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.device.reset",
                    "when": "view == extension.devicescript.jdom && viewItem =~ /(device|simulator)/"
                },
                {
                    "command": "extension.devicescript.simulator.clear",
                    "when": "view == extension.devicescript.jdom && viewItem == simulator",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.device.identify",
                    "when": "view == extension.devicescript.jdom && viewItem == /device/"
                },
                {
                    "command": "extension.devicescript.device.flash",
                    "when": "view == extension.devicescript.jdom && viewItem =~ /flash/"
                },
                {
                    "command": "extension.devicescript.register.edit",
                    "when": "view == extension.devicescript.jdom && viewItem =~ /^register_rw/",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.node.copy",
                    "when": "view == extension.devicescript.jdom && viewItem =~ /^register/"
                },
                {
                    "command": "extension.devicescript.node.copy",
                    "when": "view == extension.devicescript.jdom && viewItem =~ /^register/"
                },
                {
                    "command": "extension.devicescript.jdom.gateway.connect",
                    "when": "view == extension.devicescript.jdom && viewItem == devs_cloud_configuration",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.jdom.gateway.edit",
                    "when": "view == extension.devicescript.jdom && viewItem == devs_cloud_configuration",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.jdom.wifi.reconnect",
                    "when": "view == extension.devicescript.jdom && viewItem == devs_wifi",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.jdom.devicescript.toggle",
                    "when": "view == extension.devicescript.jdom && viewItem == devs_devicescript",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.jdom.wifi.ap.add",
                    "when": "view == extension.devicescript.jdom && viewItem == devs_wifi_ap_unknown",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.jdom.wifi.ap.forget",
                    "when": "view == extension.devicescript.jdom && viewItem == devs_wifi_ap_known",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.jdom.wifi.ap.setPriority",
                    "when": "view == extension.devicescript.jdom && viewItem == devs_wifi_ap_known"
                },
                {
                    "command": "extension.devicescript.watch.add",
                    "when": "view == extension.devicescript.jdom && viewItem =~ /^(register|event)/",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.watch.remove",
                    "when": "view == extension.devicescript.watch && viewItem =~ /^(register|event)/",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.watch.remove",
                    "when": "view == extension.devicescript.watch && viewItem == missing",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.gateway.script.upload",
                    "when": "view == extension.devicescript.gateway && viewItem == cloudScript",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.gateway.script.delete",
                    "when": "view == extension.devicescript.gateway && viewItem == cloudScript"
                },
                {
                    "command": "extension.devicescript.gateway.device.connect",
                    "when": "view == extension.devicescript.gateway && viewItem == cloudDevice",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.gateway.device.script.configure",
                    "when": "view == extension.devicescript.gateway && viewItem == cloudDevice",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.gateway.device.script.update.latest",
                    "when": "view == extension.devicescript.gateway && viewItem == cloudDevice",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.gateway.device.refreshToken",
                    "when": "view == extension.devicescript.gateway && viewItem == cloudDevice"
                },
                {
                    "command": "extension.devicescript.gateway.device.unregister",
                    "when": "view == extension.devicescript.gateway && viewItem == cloudDevice"
                },
                {
                    "command": "extension.devicescript.gateway.devices.register",
                    "when": "view == extension.devicescript.gateway && viewItem == cloudDevices",
                    "group": "inline"
                },
                {
                    "command": "extension.devicescript.gateway.scripts.upload",
                    "when": "view == extension.devicescript.gateway && viewItem == cloudScripts",
                    "group": "inline"
                }
            ],
            "commandPalette": [
                {
                    "command": "extension.devicescript.openSimulators",
                    "when": "workbenchState != empty"
                },
                {
                    "command": "extension.devicescript.configure",
                    "when": "workbenchState != empty"
                },
                {
                    "command": "extension.devicescript.pickDeviceScriptManager",
                    "when": "workbenchState != empty"
                },
                {
                    "command": "extension.devicescript.connect",
                    "when": "workbenchState != empty"
                },
                {
                    "command": "extension.devicescript.device.flash",
                    "when": "workbenchState != empty"
                },
                {
                    "command": "extension.devicescript.simulator.start",
                    "when": "workbenchState != empty"
                },
                {
                    "command": "extension.devicescript.simulator.stop",
                    "when": "workbenchState != empty"
                },
                {
                    "command": "extension.devicescript.terminal.show",
                    "when": "workbenchState != empty"
                },
                {
                    "command": "extension.devicescript.sims.add",
                    "when": "workbenchState != empty"
                },
                {
                    "command": "extension.devicescript.services.add",
                    "when": "workbenchState != empty"
                },
                {
                    "command": "extension.devicescript.boards.add",
                    "when": "workbenchState != empty"
                },
                {
                    "command": "extension.devicescript.gateway.configure"
                },
                {
                    "command": "extension.devicescript.gateway.refresh"
                },
                {
                    "command": "extension.devicescript.project.new",
                    "when": "workbenchState != empty"
                }
            ],
            "debug/variables/context": [
                {
                    "command": "extension.devicescript.debug.toggleFormatting",
                    "when": "debugType == 'devicescript' && debugProtocolVariableMenuContext == 'simple'"
                }
            ]
        },
        "commands": [
            {
                "command": "extension.devicescript.project.new",
                "title": "Create New Project...",
                "category": "DeviceScript"
            },
            {
                "command": "extension.devicescript.editor.debug",
                "title": "DeviceScript: Debug",
                "category": "DeviceScript",
                "icon": "$(debug-alt)"
            },
            {
                "command": "extension.devicescript.editor.run",
                "title": "DeviceScript: Run",
                "category": "DeviceScript",
                "icon": "$(debug-run)"
            },
            {
                "command": "extension.devicescript.editor.build",
                "title": "DeviceScript: Build",
                "category": "DeviceScript",
                "icon": "$(package)"
            },
            {
                "command": "extension.devicescript.terminal.show",
                "title": "Show Development Server Terminal",
                "category": "DeviceScript",
                "icon": "$(output)"
            },
            {
                "command": "extension.devicescript.openSimulators",
                "title": "Open Simulators",
                "category": "DeviceScript",
                "icon": "$(dashboard)"
            },
            {
                "command": "extension.devicescript.device.identify",
                "title": "Identify device",
                "category": "DeviceScript",
                "icon": "$(bell)"
            },
            {
                "command": "extension.devicescript.connect",
                "title": "Connect",
                "category": "DeviceScript",
                "icon": "$(plug)"
            },
            {
                "command": "extension.devicescript.device.flash",
                "title": "Flash Firmware...",
                "category": "DeviceScript"
            },
            {
                "command": "extension.devicescript.sims.add",
                "title": "Add Sim...",
                "category": "DeviceScript"
            },
            {
                "command": "extension.devicescript.services.add",
                "title": "Add Service...",
                "category": "DeviceScript"
            },
            {
                "command": "extension.devicescript.boards.add",
                "title": "Add Board...",
                "category": "DeviceScript"
            },
            {
                "command": "extension.devicescript.configure",
                "title": "Configure...",
                "category": "DeviceScript",
                "icon": "$(settings-gear)"
            },
            {
                "command": "extension.devicescript.pickDeviceScriptManager",
                "title": "Pick DeviceScript device",
                "category": "DeviceScript",
                "icon": "$(circuit-board)"
            },
            {
                "command": "extension.devicescript.node.copy",
                "title": "Copy",
                "category": "DeviceScript"
            },
            {
                "command": "extension.devicescript.node.select",
                "title": "Select",
                "category": "DeviceScript"
            },
            {
                "command": "extension.devicescript.register.edit",
                "title": "Edit...",
                "category": "DeviceScript",
                "icon": "$(edit)"
            },
            {
                "command": "extension.devicescript.jdom.gateway.connect",
                "title": "Connect",
                "category": "DeviceScript",
                "icon": "$(plug)"
            },
            {
                "command": "extension.devicescript.jdom.gateway.edit",
                "title": "Edit Connection...",
                "category": "DeviceScript",
                "icon": "$(edit)"
            },
            {
                "command": "extension.devicescript.jdom.wifi.reconnect",
                "title": "Reconnect",
                "category": "DeviceScript",
                "icon": "$(refresh)"
            },
            {
                "command": "extension.devicescript.jdom.devicescript.toggle",
                "title": "Start/Stop",
                "category": "DeviceScript",
                "icon": "$(refresh)"
            },
            {
                "command": "extension.devicescript.jdom.wifi.ap.add",
                "title": "Add Network...",
                "category": "DeviceScript",
                "icon": "$(plug)"
            },
            {
                "command": "extension.devicescript.jdom.wifi.ap.forget",
                "title": "Forget Network",
                "category": "DeviceScript",
                "icon": "$(close)"
            },
            {
                "command": "extension.devicescript.jdom.wifi.ap.setPriority",
                "title": "Set Priority...",
                "category": "DeviceScript"
            },
            {
                "command": "extension.devicescript.watch.clear",
                "title": "Clear watches",
                "category": "DeviceScript",
                "icon": "$(close-all)"
            },
            {
                "command": "extension.devicescript.watch.add",
                "title": "Watch",
                "category": "DeviceScript",
                "icon": "$(pin)"
            },
            {
                "command": "extension.devicescript.watch.remove",
                "title": "Unwatch",
                "category": "DeviceScript",
                "icon": "$(close)"
            },
            {
                "command": "extension.devicescript.device.reset",
                "title": "Reset device",
                "category": "DeviceScript",
                "icon": "$(debug-restart)"
            },
            {
                "command": "extension.devicescript.debug.toggleFormatting",
                "title": "Toggle between decimal and hex formatting"
            },
            {
                "command": "extension.devicescript.simulator.start",
                "title": "Start Simulator",
                "category": "DeviceScript"
            },
            {
                "command": "extension.devicescript.simulator.stop",
                "title": "Stop Simulator",
                "category": "DeviceScript",
                "icon": "$(close)"
            },
            {
                "command": "extension.devicescript.simulator.clear",
                "title": "Clear Flash",
                "category": "DeviceScript",
                "icon": "$(clear-all)"
            },
            {
                "command": "extension.devicescript.device.showFirmwareInformation",
                "title": "Update Firmware",
                "category": "DeviceScript"
            },
            {
                "command": "extension.devicescript.gateway.configure",
                "title": "Configure connection...",
                "category": "DeviceScript Gateway",
                "icon": "$(settings-gear)"
            },
            {
                "command": "extension.devicescript.gateway.refresh",
                "title": "Refresh",
                "category": "DeviceScript Gateway",
                "icon": "$(refresh)"
            },
            {
                "command": "extension.devicescript.gateway.devices.register",
                "title": "Register Device...",
                "category": "DeviceScript Gateway",
                "icon": "$(add)"
            },
            {
                "command": "extension.devicescript.gateway.script.upload",
                "title": "Upload Script",
                "category": "DeviceScript Gateway",
                "icon": "$(arrow-up)"
            },
            {
                "command": "extension.devicescript.gateway.script.delete",
                "title": "Delete Script...",
                "category": "DeviceScript Gateway"
            },
            {
                "command": "extension.devicescript.gateway.device.connect",
                "title": "Connect...",
                "category": "DeviceScript Gateway",
                "icon": "$(plug)"
            },
            {
                "command": "extension.devicescript.gateway.device.ping",
                "title": "Ping",
                "category": "DeviceScript Gateway"
            },
            {
                "command": "extension.devicescript.gateway.device.script.configure",
                "title": "Configure Script...",
                "category": "DeviceScript Gateway",
                "icon": "$(file-code)"
            },
            {
                "command": "extension.devicescript.gateway.device.script.update.latest",
                "title": "Update Script to Latest",
                "category": "DeviceScript Gateway",
                "icon": "$(arrow-down)"
            },
            {
                "command": "extension.devicescript.gateway.device.refreshToken",
                "title": "Refresh token",
                "category": "DeviceScript Gateway"
            },
            {
                "command": "extension.devicescript.gateway.device.unregister",
                "title": "Unregister Device...",
                "category": "DeviceScript Gateway"
            },
            {
                "command": "extension.devicescript.gateway.scripts.upload",
                "title": "Upload Script...",
                "category": "DeviceScript Gateway",
                "icon": "$(add)"
            }
        ],
        "breakpoints": [
            {
                "language": "typescript"
            }
        ],
        "debuggers": [
            {
                "type": "devicescript",
                "languages": [
                    "typescript"
                ],
                "label": "DeviceScript",
                "program": "./out/debugAdapter.js",
                "runtime": "node",
                "configurationAttributes": {
                    "launch": {
                        "required": [
                            "program",
                            "deviceId"
                        ],
                        "properties": {
                            "program": {
                                "type": "string",
                                "description": "Absolute path to a text file.",
                                "default": "${workspaceFolder}/main.ts"
                            },
                            "stopOnEntry": {
                                "type": "boolean",
                                "description": "Automatically stop after launch.",
                                "default": true
                            },
                            "deviceId": {
                                "type": "string",
                                "description": "Device identifier of the device (long or short). Use ${command:deviceScriptSimulator} for the Simulator."
                            },
                            "serviceInstance": {
                                "type": "number",
                                "description": "Instance index of the device manger service. Default is 0."
                            }
                        }
                    }
                },
                "initialConfigurations": [
                    {
                        "type": "devicescript",
                        "request": "launch",
                        "name": "DeviceScript: Launch",
                        "program": "${workspaceFolder}/main.ts",
                        "stopOnEntry": false
                    }
                ],
                "configurationSnippets": [
                    {
                        "label": "DeviceScript: Launch",
                        "description": "A new configuration for 'debugging' the project entry point, `src/main.ts`.",
                        "body": {
                            "type": "devicescript",
                            "request": "launch",
                            "name": "DeviceScript: Launch",
                            "program": "^\"\\${workspaceFolder}/main.ts",
                            "stopOnEntry": false
                        }
                    }
                ],
                "variables": {
                    "deviceScriptSimulator": "extension.devicescript.variables.simulator"
                }
            }
        ]
    }
}